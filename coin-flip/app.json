[{"name": "app.py", "content": "from shiny import *\nimport random\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\n\n\ndef coinToss(n=1):\n    return np.random.randint(0, 2, size=n)\n\ndef percPar(cnt, n):\n    perc = 100 * cnt / n\n    return \"(\" + str(np.around(perc, 1)) + \"%)\"\n\napp_ui = ui.page_fluid(\n    ui.h1(\"Coin toss app\"),\n    ui.tags.br(),\n    ui.input_slider(\"obs\", \"Number of Coins\", min=1, max=500, value=1),\n    ui.input_action_button(\"flip\", \"Flip Coin(s)\", class_=\"btn-primary\"),\n    ui.tags.br(),\n    ui.tags.br(),\n    ui.output_text(\"txt\"),\n    ui.output_plot(\"plot\"),\n)\n\n\ndef server(input, output, session):\n    @output\n    @render.text \n    def txt():\n        vals = result()\n        catch_phrase = random.choice([\"Huzzah\", \"Horrah\", \"Woah\"])\n        return f\"{catch_phrase}! You landed {vals[0]} and {vals[1]}!\"\n\n    @reactive.Calc\n    @reactive.event(input.flip)\n    def result():\n        xmin, xmax, dx = 1, input.obs(), 1\n        x = np.arange(xmin, xmax, dx)\n        tosses = coinToss(n=input.obs())\n        a, b = x, [tosses[:i].mean() for i in x]\n\n        h_cnt, t_cnt = np.sum(tosses == 1), np.sum(tosses == 0)\n        h = str(h_cnt) + \" heads\" + percPar(h_cnt, xmax)\n        t = str(t_cnt) + \" tails\" + percPar(t_cnt, xmax)\n        return [h, t, a, b]\n\n    @output\n    @render.plot(alt=\"A line chart\")\n    def plot():\n        if input.obs() > 5:\n            fig, ax = plt.subplots(1,1)\n            ax.plot(result()[2], result()[3])\n            ax.set_ylim([0, 1.1])\n            ax.set_ylabel(\"Proportion of heads\")\n            ax.set_xlabel(\"Flip number\")\n            return fig\n\n\napp = App(app_ui, server)\n", "type": "text"}]